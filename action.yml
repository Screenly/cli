---
# action.yml
name: "Screenly"
description: "GitHub Actions for Screenly."
author: "Screenly, Inc"
branding:
  icon: "code"
  color: "purple"
inputs:
  screenly_api_token:
    description: "Your Screenly API token."
    required: true
  cli_commands:
    description: "Your Screenly CLI command(s)."
    required: true
  print_cli_commands_output:
    description: "Print the Screenly CLI command(s) output."
    default: "true"
    required: false
  cli_version:
    description: "Screenly CLI version."
    default: "v1.0.3"

outputs:
  cli_commands_response:
    description: "The response from the Screenly CLI command(s)."
    value: ${{ steps.run-cli.outputs.response }}

runs:
  using: "composite"
  steps:
    - name: Download CLI
      id: download-cli
      run: |
        pushd /tmp
        wget -q -O screenly-cli.tar.gz \
          "https://github.com/Screenly/cli/releases/download/${{ inputs.cli_version }}/screenly-cli-x86_64-unknown-linux-gnu.tar.gz"
        tar xfz screenly-cli.tar.gz
        chmod +x screenly
        popd
      shell: bash

    - name: Run CLI
      id: run-cli
      continue-on-error: true
      run: |
        set -o pipefail

        API_TOKEN=${{ inputs.screenly_api_token }} RUST_LOG=debug /tmp/screenly ${{ inputs.cli_commands }}  >> /tmp/screenly_cli_command_output.txt

        # Filter logs from github output, while still saving them as artifact. Filtered lines are like: 2024-10-16T13:16:13.974Z DEBUG [reqwest::connect] ...
        grep -Ev '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3}Z[[:space:]](DEBUG|INFO|WARNING|ERROR)' /tmp/screenly_cli_command_output.txt | tr '\n' ' ' > /tmp/command_cleaned_output.txt
        echo "response=$(cat /tmp/command_cleaned_output.txt)" >> "$GITHUB_OUTPUT"
        cat /tmp/command_cleaned_output.txt
      shell: bash

    - name: Upload artifacts of failed screenly cli command
      uses: actions/upload-artifact@v4
      with:
        name: run-cli-output
        path: |
          /tmp/screenly_cli_command_output.txt

    - name: Fail if cli command failed
      shell: bash
      if: ${{ steps.run-cli.outcome != 'success' }}
      run: |
        exit 1
